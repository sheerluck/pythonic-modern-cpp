cmake_minimum_required(VERSION 3.5)
project(string)

include_directories(_vendor/catch/include)
include_directories(_vendor/catch-ext/include)
include_directories(_vendor/pythonic/include)
include_directories(_vendor/range-v3/include)
include_directories(_vendor/fmt/include)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z -stdlib=libc++")
if (USE_MODULES)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z -stdlib=libc++ -fno-autolink -fmodules -fmodules-cache-path=${CMAKE_SOURCE_DIR}/build")
endif(USE_MODULES)
set(SOURCE_FILES main.cpp)
add_executable(string ${SOURCE_FILES})
add_executable(pythonic _vendor/pythonic/include/pythonic/utf8.hpp _vendor/pythonic/include/pythonic/regexs.hpp)

find_package( ZLIB REQUIRED )
if ( ZLIB_FOUND )
    include_directories( ${ZLIB_INCLUDE_DIRS} )
    target_link_libraries( string ${ZLIB_LIBRARIES} )
endif( ZLIB_FOUND )
